nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
replicaCount: 1


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

annotations: {}

image:
  repository: smartcommunitylab/resourcemanager
  tag: "2.0"
  pullPolicy: IfNotPresent

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 500m
    memory: "1024Mi"
  requests:
    cpu: 100m
    memory: "128Mi"

# readinessProbe:
#   httpGet:
#     path: /health
#     port: 8080
#   initialDelaySeconds: 40
#   periodSeconds: 5
#   successThreshold: 2
#
# livenessProbe:
#   httpGet:
#     path: /health
#     port: 8080
#   initialDelaySeconds: 30
#   periodSeconds: 10

strategy:
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

service:
  portName: http
  port: 8080
  extraPorts:
  - name: http-metrics
    protocol: TCP
    port: 8086
    targetPort: 8086

externalUrl: "https://rm.kube-test.smartcommunitylab.it"
javaOpts: "-XX:+UseContainerSupport -XX:MinRAMPercentage=50.0 -XX:MaxRAMPercentage=80.0"

externalDatabase:
  enabled: true
  uri: "jdbc:mysql://mysql.databases:3306/rm?useSSL=false"
  existingSecret: "rs-db-creds"
  userKey: "username"
  passwordKey: "password"

oauth:
  enabled: true
  tokenUri: "https://aac.kube-test.smartcommunitylab.it/oauth/token"
  authUri: "https://aac.kube-test.smartcommunitylab.it/eauth/authorize"
  userInfoUri: "https://aac.kube-test.smartcommunitylab.it/userinfo"
  issuerUri: "https://aac.kube-test.smartcommunitylab.it"
  existingSecret: "rs-oauth-creds"
  clientIdKey: "username"
  clientSecretKey: "password"

providers:
  postgres:
      enabled: true
      existingSecret: "postgres.acid-minimal-cluster.credentials.postgresql.acid.zalan.do"
      userKey: "username"
      passwordKey: "password"
      host: acid-minimal-cluster.global.svc.cluster.local
      port: "5432"
  mysql:
      enabled: true
      existingSecret: "mysql-creds"
      userKey: "username"
      passwordKey: "password"
      host: "mysql.global.svc.cluster.local"
      port: "3306"
  minio:
    enabled: true
    existingSecret: "minio-creds"
    userKey: "accesskey"
    passwordKey: "secretkey"
    host: minio.global.svc.cluster.local
    port: "9000"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
