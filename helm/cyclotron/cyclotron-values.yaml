nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""
replicasCount: 1

auth:
  enabled: true
  provider: "aac"
  useJWT: true
  clientId: "xaqkd7Tf-8dwN-p4iU-prh3-ga9r-qRiJSBKvoW1Q"
  clientSecret: "TEz9bqTA-57HD-h3hY-mD3q-NM0V-Asm08fMvnio3"
  issuer: "https://aac.kube-test.smartcommunitylab.it"
  jwksEndpoint: "https://aac.kube-test.smartcommunitylab.it/jwk"
  tokenIntrospectionEndpoint: "https://aac.kube-test.smartcommunitylab.it/oauth/introspect"
  userProfileEndpoint: "https://aac.kube-test.smartcommunitylab.it/userinfo"
  parentSpace: "components/cyclotron"
  editorRoles: "'ROLE_PROVIDER','ROLE_EDITOR'"
  authorizationURL: "https://aac.kube-test.smartcommunitylab.it/eauth/authorize"
  callbackDomain: "https://cyclotron.kube-test.smartcommunitylab.it/"
  scopes: "openid profile user.roles.me"

site:
  image:
    repository: smartcommunitylab/cyclotron-site
    tag: 5aaad43
    pullPolicy: IfNotPresent

  labels: {}

  confs:
    existingSecret: ""
    filePath: "/usr/share/nginx/html/js/conf"
    fileName: "configService.js"

  resources: {}
    # limits:
    #   cpu: "1000m"
    #   memory: "512Mi"
    # requests:
    #   cpu: "250m"
    #   memory: "256Mi"

  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 40
    periodSeconds: 5
    successThreshold: 2

  livenessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 30
    periodSeconds: 10

  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  service:
    name: http
    type: ClusterIP
    port: 80
    labels: {}

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

    annotations: {}

svc:
  url: "https://cyclotron.kube-test.smartcommunitylab.it"
  image:
    repository: smartcommunitylab/cyclotron-svc
    tag: 5aaad43
    pullPolicy: IfNotPresent

  labels: {}

  confs:
    existingSecret: ""
    filePath: "/home/cyclotron/cyclotron-svc/config"
    fileName: "config.js"

  mongo:
    user: cyclotron
    password: cyclotron
    url: mongo-mongodb.databases
    dbName: cyclotron

  resources: {}
    # limits:
    #   cpu: "1000m"
    #   memory: "512Mi"
    # requests:
    #   cpu: "250m"
    #   memory: "256Mi"

  readinessProbe:
    httpGet:
      path: /
      port: 8077
    initialDelaySeconds: 40
    periodSeconds: 5
    successThreshold: 2

  livenessProbe:
    httpGet:
      path: /
      port: 8077
    initialDelaySeconds: 30
    periodSeconds: 10

  strategy:
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

  service:
    name: http
    type: ClusterIP
    port: 8077
    labels: {}

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

    annotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
