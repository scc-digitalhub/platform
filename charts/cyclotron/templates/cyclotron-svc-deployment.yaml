apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cyclotron.fullname" . }}-svc
  namespace: {{ template "cyclotron.namespace" . }}
  labels:
    app.kubernetes.io/tier: svc
    {{- include "cyclotron.labels" . | nindent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.svc.labels | indent 4 }}
{{- end }}
{{- with .Values.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/tier: svc
      {{- include "cyclotron.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.svc.replicasCount }}
  strategy:
    type: RollingUpdate
{{ toYaml .Values.svc.strategy | indent 4 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/tier: svc
        {{- include "cyclotron.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cyclotron-svc-secret.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "cyclotron.serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}-svc
        image: "{{ .Values.svc.image.repository }}:{{ .Values.svc.image.tag }}"
        imagePullPolicy: {{ .Values.svc.image.pullPolicy }}
        resources:
{{ toYaml .Values.svc.resources | indent 10 }}
        ports:
          - containerPort: 8077
            name: http
        readinessProbe:
{{ toYaml .Values.svc.readinessProbe | indent 10 }}
        livenessProbe:
{{ toYaml .Values.svc.livenessProbe | indent 10 }}
        volumeMounts:
        - name: cyclotron-svc-conf
          mountPath: {{ .Values.svc.confs.filePath }}/{{ .Values.svc.confs.fileName }}
          subPath: {{ .Values.svc.confs.fileName }}
          readOnly: true
      volumes:
        - name: cyclotron-svc-conf
          secret:
            secretName: {{ .Values.svc.confs.existingSecret | default "cyclotron-svc-confs" }}
